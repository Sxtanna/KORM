group 'com.sxtanna.korm'
version '1.6.1'

buildscript {

    ext {
        versionDokka = '0.9.17'
        versionKotlin = '1.3.10'
        versionNexusStaging = '0.12.0'
    }

    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }

        mavenCentral()
    }

    dependencies {
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:$versionDokka"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$versionKotlin"
        classpath "io.codearte.gradle.nexus:gradle-nexus-staging-plugin:$versionNexusStaging"
    }

}


apply plugin: 'maven'
apply plugin: 'kotlin'
apply plugin: 'signing'
apply plugin: 'java-library'
apply plugin: 'org.jetbrains.dokka'
apply plugin: 'io.codearte.nexus-staging'


repositories.mavenCentral()

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-reflect:1.3.10"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.3.10"

    testCompile 'junit:junit:4.12'
    testCompile 'org.junit.jupiter:junit-jupiter-engine:5.0.1'
}


sourceSets {
    test.compileClasspath += configurations.compileOnly
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions.jvmTarget = "1.8"
}


task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}
task javadocJar(type: Jar, dependsOn: dokka) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}


dokka {
    outputFormat = 'javadoc'
    outputDirectory = javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

signing {
    required { gradle.taskGraph.hasTask('uploadArchives') }

    sign jar
    sign sourcesJar
    sign javadocJar
}

nexusStaging {
    packageGroup = 'com.sxtanna'
}


uploadArchives {
    dependsOn = [clean, signJavadocJar, signSourcesJar, signJar]

    repositories {
        mavenDeployer {

            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            pom.project {
                name project.name
                description "Kotlin Object-Relational Mapping"
                url "https://github.com/Sxtanna/KORM"

                scm {
                    connection 'scm:git:git://github.com/Sxtanna/KORM.git'
                    developerConnection 'scm:git:git://github.com/Sxtanna/KORM.git'
                    url 'https://github.com/Sxtanna/KORM.git'
                }

                licenses {
                    license {
                        name = 'MIT License'
                        url = 'http://www.opensource.org/licenses/mit-license.php'
                    }
                }

                developers {
                    developer {
                        name 'Sxtanna'
                        email 'me@sxtanna.com'
                    }
                }

            }

        }
    }

}